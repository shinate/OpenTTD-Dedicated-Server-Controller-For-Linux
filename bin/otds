#!/usr/bin/env bash

SERVER_ROOT=$(dirname $(readlink -f "$0"))
SERVER_ROOT=${SERVER_ROOT%/*}
SERVER_KERNEL="${SERVER_ROOT}/kernel/openttd"
SERVER_SERVER_ROOT="${SERVER_ROOT}/servers"

list() {
    ls ${SERVER_SERVER_ROOT}
}

start() {
    if [[ -z $1 ]]; then
        echo -e "请输入名称以启动服务器"
        list
        exit 1
    fi

    SERVER_PATH="${SERVER_SERVER_ROOT}/$1"
    SERVER_AUTOSAVE_PATH="${SERVER_PATH}/save/autosave"
#    SERVER_HEIGHT_MAP_PATH="${SERVER_PATH}/scenario/heightmap"
    SERVER_PID=`getpid ${SERVER_PATH}`

    if [[ -n ${SERVER_PID} ]]; then
        echo -e "服务器 $1 [ ${SERVER_PID} ] 正在运行，请勿重复启动"
        exit 1
    fi

    SAVED=`getLastAutosave ${SERVER_PATH}`

#    HEIGHT_MAP=`getNewestHeightMap ${SERVER_PATH}`

    if [[ -n ${SAVED} ]]; then
        echo -e "服务器 $1 匹配到自动存档，将使用最后生成的存档 ${SERVER_AUTOSAVE_PATH}/${SAVED} 启动"
        PARAM="-g ${SERVER_AUTOSAVE_PATH}/${SAVED} -c ${SERVER_PATH}/openttd.cfg -x"
#    elif [[ -n $HEIGHT_MAP && -e "$SERVER_PATH/openttd.cfg"  ]]; then
#        echo -e "服务器 $1 将使用高度图 $SERVER_HEIGHT_MAP_PATH/$HEIGHT_MAP + 配置文件 $SERVER_PATH/openttd.cfg 启动"
#        PARAM="-g $SERVER_HEIGHT_MAP_PATH/$HEIGHT_MAP -c $SERVER_PATH/openttd.cfg -x"
    elif [[ -e "${SERVER_PATH}/openttd.cfg" ]]; then
        echo -e "服务器 $1 将使用配置文件 ${SERVER_PATH}/openttd.cfg 启动"
        PARAM="-c ${SERVER_PATH}/openttd.cfg -x"
    else
        echo -e "无法启动，$1 的配置文件 ${SERVER_PATH}/openttd.cfg 不存在！"
        exit 1
    fi

    echo "RUN: ${SERVER_KERNEL} -D ${PARAM}"

    pushd ${SERVER_PATH} > /dev/null 2>&1
    nohup ${SERVER_KERNEL} -D ${PARAM} >> ${SERVER_PATH}/run.log 2>&1 &
    popd > /dev/null 2>&1

    SERVER_PID=`ps axu | grep ${SERVER_PATH} | grep -v grep | awk '{print $2}'`
    echo ${SERVER_PID} > ${SERVER_PATH}/run.pid

    echo -e "服务器 $1 启动成功"
    echo -e "查看执行日志: ${SERVER_SERVER_ROOT}/$1/run.log"
}

stop() {
    if [[ -z $1 ]]; then
        echo -e "请输入名称以关闭服务器"
        stats
        exit 1
    fi

    SERVER_PATH="${SERVER_SERVER_ROOT}/$1"
    SERVER_PID=`getpid ${SERVER_PATH}`

    if [[ -z ${SERVER_PID} ]]; then
        echo -e "服务器 $1 并没有启动"
        exit 1
    fi

    kill ${SERVER_PID}

    echo -e "服务器 $1 关闭成功"
}

clear() {
    if [[ -z $1 ]]; then
        echo -e "请输入名称以清理存档服务器"
        list
        exit 1
    fi

    # TODO

    SERVER_PATH="${SERVER_SERVER_ROOT}/$1"
    SAVED=`getLastAutosave ${SERVER_PATH}`

    if [[ -n ${SAVED} ]]; then
        rm -rf "${SERVER_PATH}/save/autosave"
        echo -e "存档清理完毕"
    else
        echo -e "没有找到任何存档"
    fi
}

backup() {
    if [[ -z $1 ]]; then
        echo -e "请输入名称以备份存档"
        list
        exit 1
    fi

    SERVER_PATH="${SERVER_SERVER_ROOT}/$1"
    SERVER_AUTOSAVE_PATH="${SERVER_PATH}/save/autosave"

    SAVED=`getLastAutosave ${SERVER_PATH}`

    if [[ -n ${SAVED} ]]; then
        echo -e "服务器 $1 匹配到自动存档，将使用最后生成的存档 ${SERVER_AUTOSAVE_PATH}/${SAVED} 进行备份"
        CURRENT_DATETIME=$(date "+%Y%m%d_%H%M%S")
        FROM="${SERVER_AUTOSAVE_PATH}/${SAVED}"
        TO="${SERVER_PATH}/save/$1_backup_${CURRENT_DATETIME}.sav"
        cp "${FROM}" "${TO}"
        echo -e "存档备份成功 ${TO}"
        exit 1
    else
        echo -e "没有找到任何存档"
        exit 1
    fi
}

getpid() {
    echo `ps axu | grep $1 | grep -v grep | awk '{print $2}'`
}

getLastAutosave() {
    path="$1/save/autosave"
    if [[ -e ${path} && -d ${path} ]]; then
        ls -t ${path} | head -n1
    fi
}

getNewestHeightMap() {
    path="$1/scenario/heightmap"
    if [[ -e ${path} && -d ${path} ]]; then
        ls -t ${path} | head -n1
    fi
}

usage() {
    echo -e "$0 {list|start|stop|clear|stats|backup}"
    echo -e "说明:"
    echo -e "  list                展示可用的服务器名称列表"
    echo -e "  start [服务器名]    启动相应的服务器"
    echo -e "  stop [服务器名]     关闭相应的服务器"
    echo -e "  clear [服务器名]    清除相应的服务器的自动存档"
    echo -e "  backup [服务器名]   备份存档"
    echo -e "  stats               运行中的服务器 名称 [ PID ]"
    echo -e ""
    exit 1
}

stats() {
    echo -e "正在运行的服务器"
    ps axu | grep openttd | grep -v grep | grep -v $0 | awk '{print $2$14}' | awk -F '/' '{print $5" [ "$1" ] "}'
}

case "$1" in
    -h|--help)
        usage
        ;;
    list)
        list
        ;;
    start)
        start $2
        ;;
    stop)
        stop $2
        ;;
    clear)
        clear $2
        ;;
    stats)
        stats
        ;;
    backup)
        backup $2
        ;;
    *)
        echo -e "使用: otds {list|start|stop|clear|stats|backup}"
        echo -e "详细说明参见 -h (--help)"
        exit 1
        ;;
esac